

The SuperPy App. instructions

-------------------------------------------------------------------------------------------------------------
- Buy

To buy a product use:
python main.py buy 

There are a few options to use as arguments:
--name or -n          "Product name"

--price or -p         "Buying price of the product"

--amount or -a        "Amount of products" (if not supplied it will be 1 product)"

--expiration or -e    "Expiration date yyyy-mm-dd"

The item is given an id and add to the purchase.csv and to the inventory.csv 


Examples:

python main.py buy -n Apple -p 2 -e 2024-01-01 
--This will buy a single(default) Apple for 2 Euro with expiration date 2024-01-01 
  return OK

python main.py buy -n Pear -p 3 -a 6 -e 2024-11-01
--This will buy 6 Pears for 3 Euro with expiration date 2024-11-01
  return OK

---------------------------------------------------------------------------------------------------------------------

- Sell

To sell a product use:
python main.py sell

There are a few options to use as arguments:
--name or -n          "Product name"

--price or -p         "Selling price of the product"

--amount or -a        "Amount of products" (if not supplied it will be 1 product)

The selling goes through the entire inventory and collects all the products with the same name.
You can only sell the number of products that are in stock
You can only sell the products that have not expired.

return:
OK
error message: ERROR: Product not in stock 
error message: ERROR: You can only sell the number of products in stock


Examples:

python sell -n banana -p 1                    
--This will sell 1 banana for 1eur
  return: 
  OK

python sell -n banana -p 3 -a 10               
--This will sell 10 bananas for 3eur 
  return: 
  OK

python sell -n banana -p 3 -a 109               
--This will sell 10 bananas for 3eur 
  return:
  ERROR: You can only sell 20 banana

---------------------------------------------------------------------------------------------------

- Advancetime

To advance the time use:
python main.py advance-time

The argument to use:

--date or -d            "Amount of days to advance the date"


Examples:

python main.py advance-time -d 5 
--Advances the date with 5 days

  return:
  Current day set to: 2023-07-11
  

---------------------------------------------------------------------------------------------------

- Set Date

To set the date use:
python main.py set-date

The argument to use:

--date or -d            "set the date to the input date yyyy-mm-dd"


Examples:

python main.py set-date -d 2023-01-02
--set the date to 2023-01-02

  return:
  Current day set to: 2023-01-02




---------------------------------------------------------------------------------------------------


- Report

There are three types of reports to get from the program: [ inventory | revenue | profit ]

Inventory:


python main.py report inventory 

There are a few options to use as arguments:

--today or -t         shows the inventory for today

--yesterday or -y     shows the inventory for yesterday

--now or-n            shows the inventory for the day set with Advancetime

--date  or-d          "date yyyy-mm-dd" shows the inventory on this date 

the inventory argument shows also a bar chart

Examples:
python main.py report inventory -t
return:
────────────────────────────────────── Inventory: 2023-07-03 ───────────────────────────────────────
     ┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓     
     ┃  Product Name     ┃  Amount    ┃  Purchase price    ┃  Expirtion date    ┃  Expirate   ┃     
     ┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩     
     │  appel            │  1         │  € 6.0             │  2023-07-03        │  N0         │     
     │  peer             │  12        │  € 5.0             │  2023-07-03        │  N0         │     
     │  peer             │  12        │  € 5.0             │  2023-07-03        │  N0         │     
     │  apple            │  5         │  € 6.0             │  2023-12-12        │  N0         │     
     └───────────────────┴────────────┴────────────────────┴────────────────────┴─────────────┘     
                                                                          Dykey/Winc Copyright ©2023


Revenue:

There are a few options to use as arguments:

--today or -t         shows the revenue for today

--yesterday or -y     shows the revenue for yesterday

--now or-n            shows the revenue for the day set with Advancetime

--date  or-d          "date yyyy-mm-dd"" shows the revenue on this date

--startingdate or-s   "startingdate yyyy-mm-dd"" shows the revenue from this date to current date

Examples:
python main.py report revenue -y 
return: 
─────────────────────────────────────── Revenue: 2023-07-02 ────────────────────────────────────────

  Total revenue : € 0.00
────────────────────────────────────────────────────────────────────────────────────────────────────
                                                                          Dykey/Winc Copyright ©2023      



python main.py report revenue -s 2022-01-10
return:
────────────────────────────── Revenue: from 2022-01-10 to 2023-07-03 ──────────────────────────────

  Total revenue : € 9.00
────────────────────────────────────────────────────────────────────────────────────────────────────
                                                                          Dykey/Winc Copyright ©2023

Profit:

There are a few options to use as arguments:

--today or -t         shows the profit for today

--yesterday or -y     shows the profit for yesterday

--now or-n            shows the profit for the day Advancetime

--date  or-d          "date yyyy-mm-dd"" shows the profit on this date

--startingdate or-s   "startingdate yyyy-mm-dd"" shows the profit from this date to current date

Examples:
python main.py report profit -t
return:
──────────────────────────── Profit: 2023-07-03 ────────────────────────────

  Total Profit : € -25.00
────────────────────────────────────────────────────────────────────────────
                                                  Dykey/Winc Copyright ©2023


main.py report profit -s 2023-01-10
return:
────────────────── Profit: from 2023-01-10 to 2023-07-03 ───────────────────

  Total Profit : € -25.00
────────────────────────────────────────────────────────────────────────────
                                                  Dykey/Winc Copyright ©2023
